# API Data Specification for Lottery Bet Submission

This document summarizes the structure and details of the JSON data sent to the API endpoint `https://uat365.xn--365-illyh3a1ap3gui.com/apiline/line_bet_poy.php` for submitting lottery bets from the LINE Bot system. It is intended for developers maintaining or integrating with the API to understand the data format, field descriptions, and possible values.

---

## API Endpoint
- **URL**: `https://uat365.xn--365-illyh3a1ap3gui.com/apiline/line_bet_poy.php`
- **Method**: POST
- **Content-Type**: `application/json; charset=UTF-8`

## JSON Structure
The data is sent as a JSON object containing details of a lottery bet slip (referred to as a "note"). Below is an example of the JSON payload:

```json
{
    "note_id": "note_68077b3eaf13e",
    "user_id": "Uba845222e98831adae704242bbad0dda",
    "lottery_type": "หวยรัฐบาล",
    "kind": "บนล่าง",
    "numbers": [
        {
            "section": "top",
            "entries": [
                {
                    "number": "25",
                    "bet": "20",
                    "type": "straight"
                },
                {
                    "number": "52",
                    "bet": "20",
                    "type": "straight"
                },
                {
                    "number": "123",
                    "bet": "20",
                    "type": "straight"
                },
                {
                    "number": "445",
                    "bet": "20",
                    "type": "straight"
                },
                {
                    "number": "445",
                    "bet": "20",
                    "type": "tode"
                }
            ],
            "total": 60
        },
        {
            "section": "bottom",
            "entries": [
                {
                    "number": "65",
                    "bet": "30",
                    "type": "straight"
                },
                {
                    "number": "789",
                    "bet": "40",
                    "type": "straight"
                },
                {
                    "number": "789",
                    "bet": "40",
                    "type": "tode"
                }
            ],
            "total": 70
        }
    ],
    "total_price": 130,
    "created_at": "2025-04-22 12:19:26"
}
```

## Field Descriptions
Below is a detailed breakdown of each field in the JSON payload, including its type, description, possible values, and source.

| Field | Type | Description | Possible Values | Source |
|-------|------|-------------|-----------------|--------|
| `note_id` | String | Unique identifier for the bet slip. | Example: `"note_68077b3eaf13e"` | Generated using `uniqid('note_')` when saving the bet to the database. |
| `user_id` | String | Unique LINE user ID of the user submitting the bet. | Example: `"Uba845222e98831adae704242bbad0dda"` | Extracted from the LINE webhook event (`event.source.userId`). |
| `lottery_type` | String | Type of lottery for the bet. | `"หวยรัฐบาล"`, `"หวยลาว"`, `"หวยฮานอย"`, `"หุ้นไทย-เย็น"`, `"หวยฮานอย VIP"`, `"หวยฮานอยพิเศษ"` | Selected by the user via quick reply or specified in the bet slip. |
| `kind` | String | Indicates whether the bet includes "top", "bottom", or both sections. | `"บน"`, `"ล่าง"`, `"บนล่าง"` | Determined based on the presence of numbers in the "top" and "bottom" sections of the bet slip. |
| `numbers` | Array of Objects | List of sections (top/bottom) containing bet numbers and amounts. | See sub-structure below. | Processed from the bet slip using the `transformNumbers` function. |
| `numbers[].section` | String | Specifies the section of the bet slip. | `"top"`, `"bottom"` | Derived from the bet slip structure ("บน" for top, "ล่าง" for bottom). |
| `numbers[].entries` | Array of Objects | List of individual bet numbers and their amounts. | See sub-structure below. | Generated by the `transformNumbers` function based on the bet slip input. |
| `numbers[].entries[].number` | String | The number being bet on (2 or 3 digits). | Examples: `"25"`, `"52"`, `"123"`, `"445"` | Original number from the bet slip, with additional reversed numbers for 2-digit bets with `*` or `x`, and "tode" entries for 3-digit bets with `*` or `x`. |
| `numbers[].entries[].bet` | String | The bet amount for the number. | Examples: `"20"`, `"50"` | First number if `*` or `x` is present (e.g., `20*20` → `"20"`), otherwise the full bet amount (e.g., `50` → `"50"`). |
| `numbers[].entries[].type` | String | Type of bet for the number. | `"straight"`, `"tode"` | Determined by `transformNumbers`:<br>- 2-digit: Always `"straight"`.<br>- 3-digit without `*` or `x`: `"straight"`.<br>- 3-digit with `*` or `x`: Both `"straight"` and `"tode"`. |
| `numbers[].total` | Float | Total bet amount for the section. | Example: `60` | Calculated from `calculateNoteCost` as the sum of bet amounts in the section (using the first number for `*` or `x` bets). |
| `total_price` | Float | Total bet amount for the entire slip. | Example: `130` | Sum of `numbers[].total` for all sections, calculated by `calculateNoteCost`. |
| `created_at` | String | Timestamp when the bet was saved to the database. | Example: `"2025-04-22 12:19:26"` | Retrieved from the `created_at` column in the `lottery` database table. Format: `YYYY-MM-DD HH:MM:SS`. |

## Bet Number Processing Rules
The `transformNumbers` function processes the bet numbers based on the following rules:

### 2-Digit Numbers
- **With `*` or `x`** (e.g., `25=20*20`):
  - Original number: `{ "number": "25", "bet": "20", "type": "straight" }`
  - Reversed number: `{ "number": "52", "bet": "20", "type": "straight" }`
- **Without `*` or `x`** (e.g., `25=50`):
  - Original number only: `{ "number": "25", "bet": "50", "type": "straight" }`

### 3-Digit Numbers
- **With `*` or `x`** (e.g., `445=20*20`):
  - Straight bet: `{ "number": "445", "bet": "20", "type": "straight" }`
  - Tode bet: `{ "number": "445", "bet": "20", "type": "tode" }`
- **Without `*` or `x`** (e.g., `123=20`):
  - Straight bet only: `{ "number": "123", "bet": "20", "type": "straight" }`

### Bet Amount Calculation
- For bets with `*` or `x` (e.g., `20*20`): The first number is used (e.g., `20`).
- For bets without `*` or `x` (e.g., `50`): The full amount is used (e.g., `50`).
- The `total` for each section and `total_price` reflect the sum of the first number in `*` or `x` bets or the full amount for non-`*`/`x` bets.

## Example Scenarios
### Scenario 1: Mixed 2-Digit and 3-Digit Bets
**User Input**:
```
บน
25=20*20
123=20
445=20*20
ล่าง
65=30
789=40*40
```

**JSON Payload**:
```json
{
    "note_id": "note_68077b3eaf13e",
    "user_id": "Uba845222e98831adae704242bbad0dda",
    "lottery_type": "หวยรัฐบาล",
    "kind": "บนล่าง",
    "numbers": [
        {
            "section": "top",
            "entries": [
                { "number": "25", "bet": "20", "type": "straight" },
                { "number": "52", "bet": "20", "type": "straight" },
                { "number": "123", "bet": "20", "type": "straight" },
                { "number": "445", "bet": "20", "type": "straight" },
                { "number": "445", "bet": "20", "type": "tode" }
            ],
            "total": 60
        },
        {
            "section": "bottom",
            "entries": [
                { "number": "65", "bet": "30", "type": "straight" },
                { "number": "789", "bet": "40", "type": "straight" },
                { "number": "789", "bet": "40", "type": "tode" }
            ],
            "total": 70
        }
    ],
    "total_price": 130,
    "created_at": "2025-04-22 12:19:26"
}
```

### Scenario 2: 3-Digit Bets Without `*` or `x`
**User Input**:
```
บน
123=20
456=30
```

**JSON Payload**:
```json
{
    "note_id": "note_68077b3eaf14f",
    "user_id": "Uba845222e98831adae704242bbad0dda",
    "lottery_type": "หวยลาว",
    "kind": "บน",
    "numbers": [
        {
            "section": "top",
            "entries": [
                { "number": "123", "bet": "20", "type": "straight" },
                { "number": "456", "bet": "30", "type": "straight" }
            ],
            "total": 50
        }
    ],
    "total_price": 50,
    "created_at": "2025-04-22 12:20:00"
}
```

### Scenario 3: 2-Digit Bets Without `*` or `x`
**User Input**:
```
ล่าง
65=50
88=30
```

**JSON Payload**:
```json
{
    "note_id": "note_68077b3eaf15g",
    "user_id": "Uba845222e98831adae704242bbad0dda",
    "lottery_type": "หวยฮานอย",
    "kind": "ล่าง",
    "numbers": [
        {
            "section": "bottom",
            "entries": [
                { "number": "65", "bet": "50", "type": "straight" },
                { "number": "88", "bet": "30", "type": "straight" }
            ],
            "total": 80
        }
    ],
    "total_price": 80,
    "created_at": "2025-04-22 12:21:00"
}
```

## Notes for API Developers
- **Error Handling**: The API should validate that:
  - `note_id` is unique and not duplicated in the system.
  - `user_id` corresponds to a valid user.
  - `lottery_type` is one of the allowed values.
  - `numbers[].entries[].number` is a valid 2-digit or 3-digit number.
  - `numbers[].entries[].bet` is a valid numeric string.
  - `numbers[].entries[].type` is either `"straight"` or `"tode"`.
- **Total Validation**: The API should verify that `total_price` matches the sum of `numbers[].total`, and each `numbers[].total` matches the sum of `bet` amounts in `entries`.
- **Logging**: The LINE Bot system logs the JSON payload in `api_post_data.json` and API response details in `webhook_log.txt` for debugging purposes.
- **Future Extensions**: The system may support additional bet types (e.g., 4-digit numbers) or bet formats. The API should be flexible to accommodate new `type` values or number formats.

If you need further clarification or have specific requirements for the API (e.g., response format, error codes), please contact the LINE Bot development team.